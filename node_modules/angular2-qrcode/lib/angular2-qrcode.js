import { Component, ElementRef, Input, NgModule } from '@angular/core';
import QRious from 'qrious';

import * as ɵngcc0 from '@angular/core';
var QRCodeComponent = (function () {
    /**
     * @param {?} elementRef
     */
    function QRCodeComponent(elementRef) {
        this.elementRef = elementRef;
        this.background = 'white';
        this.backgroundAlpha = 1.0;
        this.foreground = 'black';
        this.foregroundAlpha = 1.0;
        this.level = 'L';
        this.mime = 'image/png';
        this.padding = null;
        this.size = 100;
        this.value = '';
        this.canvas = false;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    QRCodeComponent.prototype.ngOnChanges = function (changes) {
        if ('background' in changes ||
            'backgroundAlpha' in changes ||
            'foreground' in changes ||
            'foregroundAlpha' in changes ||
            'level' in changes ||
            'mime' in changes ||
            'padding' in changes ||
            'size' in changes ||
            'value' in changes ||
            'canvas' in changes) {
            this.generate();
        }
    };
    /**
     * @return {?}
     */
    QRCodeComponent.prototype.generate = function () {
        try {
            var /** @type {?} */ el = this.elementRef.nativeElement;
            el.innerHTML = '';
            var /** @type {?} */ qr = new QRious({
                background: this.background,
                backgroundAlpha: this.backgroundAlpha,
                foreground: this.foreground,
                foregroundAlpha: this.foregroundAlpha,
                level: this.level,
                mime: this.mime,
                padding: this.padding,
                size: this.size,
                value: this.value
            });
            if (this.canvas) {
                el.appendChild(qr.canvas);
            }
            else {
                el.appendChild(qr.image);
            }
        }
        catch (e) {
            console.error("Could not generate QR Code: " + e.message);
        }
    };
QRCodeComponent.ɵfac = function QRCodeComponent_Factory(t) { return new (t || QRCodeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
QRCodeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: QRCodeComponent, selectors: [["qr-code"]], inputs: { background: "background", backgroundAlpha: "backgroundAlpha", foreground: "foreground", foregroundAlpha: "foregroundAlpha", level: "level", mime: "mime", padding: "padding", size: "size", value: "value", canvas: "canvas" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function QRCodeComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QRCodeComponent, [{
        type: Component,
        args: [{
                moduleId: 'module.id',
                selector: 'qr-code',
                template: ""
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { background: [{
            type: Input
        }], backgroundAlpha: [{
            type: Input
        }], foreground: [{
            type: Input
        }], foregroundAlpha: [{
            type: Input
        }], level: [{
            type: Input
        }], mime: [{
            type: Input
        }], padding: [{
            type: Input
        }], size: [{
            type: Input
        }], value: [{
            type: Input
        }], canvas: [{
            type: Input
        }] }); })();
    return QRCodeComponent;
}());
/**
 * @nocollapse
 */
QRCodeComponent.ctorParameters = function () { return [
    { type: ElementRef, },
]; };
QRCodeComponent.propDecorators = {
    'background': [{ type: Input },],
    'backgroundAlpha': [{ type: Input },],
    'foreground': [{ type: Input },],
    'foregroundAlpha': [{ type: Input },],
    'level': [{ type: Input },],
    'mime': [{ type: Input },],
    'padding': [{ type: Input },],
    'size': [{ type: Input },],
    'value': [{ type: Input },],
    'canvas': [{ type: Input },],
};
var QRCodeModule = (function () {
    function QRCodeModule() {
    }
QRCodeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: QRCodeModule });
QRCodeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function QRCodeModule_Factory(t) { return new (t || QRCodeModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QRCodeModule, { declarations: [QRCodeComponent], exports: [QRCodeComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QRCodeModule, [{
        type: NgModule,
        args: [{
                exports: [QRCodeComponent],
                declarations: [QRCodeComponent]
            }]
    }], function () { return []; }, null); })();
    return QRCodeModule;
}());
/**
 * @nocollapse
 */
QRCodeModule.ctorParameters = function () { return []; };

/**
 * Generated bundle index. Do not edit.
 */

export { QRCodeComponent, QRCodeModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcjItcXJjb2RlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyMi1xcmNvZGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQU07QUFDTjtBQUNBLEtBT0U7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Z0RBQUs7QUFDTDtBQUNBLEtBTUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgUVJpb3VzIGZyb20gJ3FyaW91cyc7XG5cbnZhciBRUkNvZGVDb21wb25lbnQgPSAoZnVuY3Rpb24gKCkge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7P30gZWxlbWVudFJlZlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIFFSQ29kZUNvbXBvbmVudChlbGVtZW50UmVmKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudFJlZiA9IGVsZW1lbnRSZWY7XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZCA9ICd3aGl0ZSc7XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZEFscGhhID0gMS4wO1xuICAgICAgICB0aGlzLmZvcmVncm91bmQgPSAnYmxhY2snO1xuICAgICAgICB0aGlzLmZvcmVncm91bmRBbHBoYSA9IDEuMDtcbiAgICAgICAgdGhpcy5sZXZlbCA9ICdMJztcbiAgICAgICAgdGhpcy5taW1lID0gJ2ltYWdlL3BuZyc7XG4gICAgICAgIHRoaXMucGFkZGluZyA9IG51bGw7XG4gICAgICAgIHRoaXMuc2l6ZSA9IDEwMDtcbiAgICAgICAgdGhpcy52YWx1ZSA9ICcnO1xuICAgICAgICB0aGlzLmNhbnZhcyA9IGZhbHNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gez99IGNoYW5nZXNcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIFFSQ29kZUNvbXBvbmVudC5wcm90b3R5cGUubmdPbkNoYW5nZXMgPSBmdW5jdGlvbiAoY2hhbmdlcykge1xuICAgICAgICBpZiAoJ2JhY2tncm91bmQnIGluIGNoYW5nZXMgfHxcbiAgICAgICAgICAgICdiYWNrZ3JvdW5kQWxwaGEnIGluIGNoYW5nZXMgfHxcbiAgICAgICAgICAgICdmb3JlZ3JvdW5kJyBpbiBjaGFuZ2VzIHx8XG4gICAgICAgICAgICAnZm9yZWdyb3VuZEFscGhhJyBpbiBjaGFuZ2VzIHx8XG4gICAgICAgICAgICAnbGV2ZWwnIGluIGNoYW5nZXMgfHxcbiAgICAgICAgICAgICdtaW1lJyBpbiBjaGFuZ2VzIHx8XG4gICAgICAgICAgICAncGFkZGluZycgaW4gY2hhbmdlcyB8fFxuICAgICAgICAgICAgJ3NpemUnIGluIGNoYW5nZXMgfHxcbiAgICAgICAgICAgICd2YWx1ZScgaW4gY2hhbmdlcyB8fFxuICAgICAgICAgICAgJ2NhbnZhcycgaW4gY2hhbmdlcykge1xuICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZSgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIFFSQ29kZUNvbXBvbmVudC5wcm90b3R5cGUuZ2VuZXJhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB2YXIgLyoqIEB0eXBlIHs/fSAqLyBlbCA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuICAgICAgICAgICAgZWwuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgICAgICB2YXIgLyoqIEB0eXBlIHs/fSAqLyBxciA9IG5ldyBRUmlvdXMoe1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHRoaXMuYmFja2dyb3VuZCxcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQWxwaGE6IHRoaXMuYmFja2dyb3VuZEFscGhhLFxuICAgICAgICAgICAgICAgIGZvcmVncm91bmQ6IHRoaXMuZm9yZWdyb3VuZCxcbiAgICAgICAgICAgICAgICBmb3JlZ3JvdW5kQWxwaGE6IHRoaXMuZm9yZWdyb3VuZEFscGhhLFxuICAgICAgICAgICAgICAgIGxldmVsOiB0aGlzLmxldmVsLFxuICAgICAgICAgICAgICAgIG1pbWU6IHRoaXMubWltZSxcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiB0aGlzLnBhZGRpbmcsXG4gICAgICAgICAgICAgICAgc2l6ZTogdGhpcy5zaXplLFxuICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnZhbHVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICh0aGlzLmNhbnZhcykge1xuICAgICAgICAgICAgICAgIGVsLmFwcGVuZENoaWxkKHFyLmNhbnZhcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBlbC5hcHBlbmRDaGlsZChxci5pbWFnZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJDb3VsZCBub3QgZ2VuZXJhdGUgUVIgQ29kZTogXCIgKyBlLm1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gUVJDb2RlQ29tcG9uZW50O1xufSgpKTtcblFSQ29kZUNvbXBvbmVudC5kZWNvcmF0b3JzID0gW1xuICAgIHsgdHlwZTogQ29tcG9uZW50LCBhcmdzOiBbe1xuICAgICAgICAgICAgICAgIG1vZHVsZUlkOiAnbW9kdWxlLmlkJyxcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ3FyLWNvZGUnLFxuICAgICAgICAgICAgICAgIHRlbXBsYXRlOiBcIlwiXG4gICAgICAgICAgICB9LF0gfSxcbl07XG4vKipcbiAqIEBub2NvbGxhcHNlXG4gKi9cblFSQ29kZUNvbXBvbmVudC5jdG9yUGFyYW1ldGVycyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFtcbiAgICB7IHR5cGU6IEVsZW1lbnRSZWYsIH0sXG5dOyB9O1xuUVJDb2RlQ29tcG9uZW50LnByb3BEZWNvcmF0b3JzID0ge1xuICAgICdiYWNrZ3JvdW5kJzogW3sgdHlwZTogSW5wdXQgfSxdLFxuICAgICdiYWNrZ3JvdW5kQWxwaGEnOiBbeyB0eXBlOiBJbnB1dCB9LF0sXG4gICAgJ2ZvcmVncm91bmQnOiBbeyB0eXBlOiBJbnB1dCB9LF0sXG4gICAgJ2ZvcmVncm91bmRBbHBoYSc6IFt7IHR5cGU6IElucHV0IH0sXSxcbiAgICAnbGV2ZWwnOiBbeyB0eXBlOiBJbnB1dCB9LF0sXG4gICAgJ21pbWUnOiBbeyB0eXBlOiBJbnB1dCB9LF0sXG4gICAgJ3BhZGRpbmcnOiBbeyB0eXBlOiBJbnB1dCB9LF0sXG4gICAgJ3NpemUnOiBbeyB0eXBlOiBJbnB1dCB9LF0sXG4gICAgJ3ZhbHVlJzogW3sgdHlwZTogSW5wdXQgfSxdLFxuICAgICdjYW52YXMnOiBbeyB0eXBlOiBJbnB1dCB9LF0sXG59O1xudmFyIFFSQ29kZU1vZHVsZSA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUVJDb2RlTW9kdWxlKCkge1xuICAgIH1cbiAgICByZXR1cm4gUVJDb2RlTW9kdWxlO1xufSgpKTtcblFSQ29kZU1vZHVsZS5kZWNvcmF0b3JzID0gW1xuICAgIHsgdHlwZTogTmdNb2R1bGUsIGFyZ3M6IFt7XG4gICAgICAgICAgICAgICAgZXhwb3J0czogW1FSQ29kZUNvbXBvbmVudF0sXG4gICAgICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbUVJDb2RlQ29tcG9uZW50XVxuICAgICAgICAgICAgfSxdIH0sXG5dO1xuLyoqXG4gKiBAbm9jb2xsYXBzZVxuICovXG5RUkNvZGVNb2R1bGUuY3RvclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXTsgfTtcblxuLyoqXG4gKiBHZW5lcmF0ZWQgYnVuZGxlIGluZGV4LiBEbyBub3QgZWRpdC5cbiAqL1xuXG5leHBvcnQgeyBRUkNvZGVDb21wb25lbnQsIFFSQ29kZU1vZHVsZSB9O1xuIl19