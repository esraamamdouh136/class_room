(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),exports, require('@angular/core'), require('qrious')) :
	typeof define === 'function' && define.amd ? define(['@angular/core','exports', '@angular/core', 'qrious'], factory) :
	(factory(global.ng.core,(global['angular2-qrcode'] = global['angular2-qrcode'] || {}),global._angular_core,global.QRious));
}(this, (function (ɵngcc0,exports,_angular_core,QRious) { 'use strict';

QRious = 'default' in QRious ? QRious['default'] : QRious;

var QRCodeComponent = (function () {
    /**
     * @param {?} elementRef
     */
    function QRCodeComponent(elementRef) {
        this.elementRef = elementRef;
        this.background = 'white';
        this.backgroundAlpha = 1.0;
        this.foreground = 'black';
        this.foregroundAlpha = 1.0;
        this.level = 'L';
        this.mime = 'image/png';
        this.padding = null;
        this.size = 100;
        this.value = '';
        this.canvas = false;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    QRCodeComponent.prototype.ngOnChanges = function (changes) {
        if ('background' in changes ||
            'backgroundAlpha' in changes ||
            'foreground' in changes ||
            'foregroundAlpha' in changes ||
            'level' in changes ||
            'mime' in changes ||
            'padding' in changes ||
            'size' in changes ||
            'value' in changes ||
            'canvas' in changes) {
            this.generate();
        }
    };
    /**
     * @return {?}
     */
    QRCodeComponent.prototype.generate = function () {
        try {
            var /** @type {?} */ el = this.elementRef.nativeElement;
            el.innerHTML = '';
            var /** @type {?} */ qr = new QRious({
                background: this.background,
                backgroundAlpha: this.backgroundAlpha,
                foreground: this.foreground,
                foregroundAlpha: this.foregroundAlpha,
                level: this.level,
                mime: this.mime,
                padding: this.padding,
                size: this.size,
                value: this.value
            });
            if (this.canvas) {
                el.appendChild(qr.canvas);
            }
            else {
                el.appendChild(qr.image);
            }
        }
        catch (e) {
            console.error("Could not generate QR Code: " + e.message);
        }
    };
QRCodeComponent.ɵfac = function QRCodeComponent_Factory(t) { return new (t || QRCodeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
QRCodeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: QRCodeComponent, selectors: [["qr-code"]], inputs: { background: "background", backgroundAlpha: "backgroundAlpha", foreground: "foreground", foregroundAlpha: "foregroundAlpha", level: "level", mime: "mime", padding: "padding", size: "size", value: "value", canvas: "canvas" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function QRCodeComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QRCodeComponent, [{
        type: _angular_core.Component,
        args: [{
                moduleId: 'module.id',
                selector: 'qr-code',
                template: ""
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { background: [{
            type: _angular_core.Input
        }], backgroundAlpha: [{
            type: _angular_core.Input
        }], foreground: [{
            type: _angular_core.Input
        }], foregroundAlpha: [{
            type: _angular_core.Input
        }], level: [{
            type: _angular_core.Input
        }], mime: [{
            type: _angular_core.Input
        }], padding: [{
            type: _angular_core.Input
        }], size: [{
            type: _angular_core.Input
        }], value: [{
            type: _angular_core.Input
        }], canvas: [{
            type: _angular_core.Input
        }] }); })();
    return QRCodeComponent;
}());
/**
 * @nocollapse
 */
QRCodeComponent.ctorParameters = function () { return [
    { type: _angular_core.ElementRef, },
]; };
QRCodeComponent.propDecorators = {
    'background': [{ type: _angular_core.Input },],
    'backgroundAlpha': [{ type: _angular_core.Input },],
    'foreground': [{ type: _angular_core.Input },],
    'foregroundAlpha': [{ type: _angular_core.Input },],
    'level': [{ type: _angular_core.Input },],
    'mime': [{ type: _angular_core.Input },],
    'padding': [{ type: _angular_core.Input },],
    'size': [{ type: _angular_core.Input },],
    'value': [{ type: _angular_core.Input },],
    'canvas': [{ type: _angular_core.Input },],
};
var QRCodeModule = (function () {
    function QRCodeModule() {
    }
QRCodeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: QRCodeModule });
QRCodeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function QRCodeModule_Factory(t) { return new (t || QRCodeModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QRCodeModule, { declarations: [QRCodeComponent], exports: [QRCodeComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QRCodeModule, [{
        type: _angular_core.NgModule,
        args: [{
                exports: [QRCodeComponent],
                declarations: [QRCodeComponent]
            }]
    }], function () { return []; }, null); })();
    return QRCodeModule;
}());
/**
 * @nocollapse
 */
QRCodeModule.ctorParameters = function () { return []; };

/**
 * Generated bundle index. Do not edit.
 */

exports.QRCodeComponent = QRCodeComponent;
exports.QRCodeModule = QRCodeModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcjItcXJjb2RlLnVtZC5qcyIsInNvdXJjZXMiOlsiYW5ndWxhcjItcXJjb2RlLnVtZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGlHQUF3RTtBQUN4RSxzRUFBc0Q7QUFDdEQseUJBQVU7QUFDViwwQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBTTtBQUNOO0FBQ0EsS0FPRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7OztnREFBSztBQUNMO0FBQ0EsS0FNRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG5cdHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyA/IGZhY3RvcnkoZXhwb3J0cywgcmVxdWlyZSgnQGFuZ3VsYXIvY29yZScpLCByZXF1aXJlKCdxcmlvdXMnKSkgOlxuXHR0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgPyBkZWZpbmUoWydleHBvcnRzJywgJ0Bhbmd1bGFyL2NvcmUnLCAncXJpb3VzJ10sIGZhY3RvcnkpIDpcblx0KGZhY3RvcnkoKGdsb2JhbFsnYW5ndWxhcjItcXJjb2RlJ10gPSBnbG9iYWxbJ2FuZ3VsYXIyLXFyY29kZSddIHx8IHt9KSxnbG9iYWwuX2FuZ3VsYXJfY29yZSxnbG9iYWwuUVJpb3VzKSk7XG59KHRoaXMsIChmdW5jdGlvbiAoZXhwb3J0cyxfYW5ndWxhcl9jb3JlLFFSaW91cykgeyAndXNlIHN0cmljdCc7XG5cblFSaW91cyA9ICdkZWZhdWx0JyBpbiBRUmlvdXMgPyBRUmlvdXNbJ2RlZmF1bHQnXSA6IFFSaW91cztcblxudmFyIFFSQ29kZUNvbXBvbmVudCA9IChmdW5jdGlvbiAoKSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHs/fSBlbGVtZW50UmVmXG4gICAgICovXG4gICAgZnVuY3Rpb24gUVJDb2RlQ29tcG9uZW50KGVsZW1lbnRSZWYpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50UmVmID0gZWxlbWVudFJlZjtcbiAgICAgICAgdGhpcy5iYWNrZ3JvdW5kID0gJ3doaXRlJztcbiAgICAgICAgdGhpcy5iYWNrZ3JvdW5kQWxwaGEgPSAxLjA7XG4gICAgICAgIHRoaXMuZm9yZWdyb3VuZCA9ICdibGFjayc7XG4gICAgICAgIHRoaXMuZm9yZWdyb3VuZEFscGhhID0gMS4wO1xuICAgICAgICB0aGlzLmxldmVsID0gJ0wnO1xuICAgICAgICB0aGlzLm1pbWUgPSAnaW1hZ2UvcG5nJztcbiAgICAgICAgdGhpcy5wYWRkaW5nID0gbnVsbDtcbiAgICAgICAgdGhpcy5zaXplID0gMTAwO1xuICAgICAgICB0aGlzLnZhbHVlID0gJyc7XG4gICAgICAgIHRoaXMuY2FudmFzID0gZmFsc2U7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7P30gY2hhbmdlc1xuICAgICAqIEByZXR1cm4gez99XG4gICAgICovXG4gICAgUVJDb2RlQ29tcG9uZW50LnByb3RvdHlwZS5uZ09uQ2hhbmdlcyA9IGZ1bmN0aW9uIChjaGFuZ2VzKSB7XG4gICAgICAgIGlmICgnYmFja2dyb3VuZCcgaW4gY2hhbmdlcyB8fFxuICAgICAgICAgICAgJ2JhY2tncm91bmRBbHBoYScgaW4gY2hhbmdlcyB8fFxuICAgICAgICAgICAgJ2ZvcmVncm91bmQnIGluIGNoYW5nZXMgfHxcbiAgICAgICAgICAgICdmb3JlZ3JvdW5kQWxwaGEnIGluIGNoYW5nZXMgfHxcbiAgICAgICAgICAgICdsZXZlbCcgaW4gY2hhbmdlcyB8fFxuICAgICAgICAgICAgJ21pbWUnIGluIGNoYW5nZXMgfHxcbiAgICAgICAgICAgICdwYWRkaW5nJyBpbiBjaGFuZ2VzIHx8XG4gICAgICAgICAgICAnc2l6ZScgaW4gY2hhbmdlcyB8fFxuICAgICAgICAgICAgJ3ZhbHVlJyBpbiBjaGFuZ2VzIHx8XG4gICAgICAgICAgICAnY2FudmFzJyBpbiBjaGFuZ2VzKSB7XG4gICAgICAgICAgICB0aGlzLmdlbmVyYXRlKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEByZXR1cm4gez99XG4gICAgICovXG4gICAgUVJDb2RlQ29tcG9uZW50LnByb3RvdHlwZS5nZW5lcmF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHZhciAvKiogQHR5cGUgez99ICovIGVsID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgICAgICBlbC5pbm5lckhUTUwgPSAnJztcbiAgICAgICAgICAgIHZhciAvKiogQHR5cGUgez99ICovIHFyID0gbmV3IFFSaW91cyh7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogdGhpcy5iYWNrZ3JvdW5kLFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRBbHBoYTogdGhpcy5iYWNrZ3JvdW5kQWxwaGEsXG4gICAgICAgICAgICAgICAgZm9yZWdyb3VuZDogdGhpcy5mb3JlZ3JvdW5kLFxuICAgICAgICAgICAgICAgIGZvcmVncm91bmRBbHBoYTogdGhpcy5mb3JlZ3JvdW5kQWxwaGEsXG4gICAgICAgICAgICAgICAgbGV2ZWw6IHRoaXMubGV2ZWwsXG4gICAgICAgICAgICAgICAgbWltZTogdGhpcy5taW1lLFxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IHRoaXMucGFkZGluZyxcbiAgICAgICAgICAgICAgICBzaXplOiB0aGlzLnNpemUsXG4gICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMudmFsdWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKHRoaXMuY2FudmFzKSB7XG4gICAgICAgICAgICAgICAgZWwuYXBwZW5kQ2hpbGQocXIuY2FudmFzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGVsLmFwcGVuZENoaWxkKHFyLmltYWdlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkNvdWxkIG5vdCBnZW5lcmF0ZSBRUiBDb2RlOiBcIiArIGUubWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBRUkNvZGVDb21wb25lbnQ7XG59KCkpO1xuUVJDb2RlQ29tcG9uZW50LmRlY29yYXRvcnMgPSBbXG4gICAgeyB0eXBlOiBfYW5ndWxhcl9jb3JlLkNvbXBvbmVudCwgYXJnczogW3tcbiAgICAgICAgICAgICAgICBtb2R1bGVJZDogJ21vZHVsZS5pZCcsXG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdxci1jb2RlJyxcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZTogXCJcIlxuICAgICAgICAgICAgfSxdIH0sXG5dO1xuLyoqXG4gKiBAbm9jb2xsYXBzZVxuICovXG5RUkNvZGVDb21wb25lbnQuY3RvclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXG4gICAgeyB0eXBlOiBfYW5ndWxhcl9jb3JlLkVsZW1lbnRSZWYsIH0sXG5dOyB9O1xuUVJDb2RlQ29tcG9uZW50LnByb3BEZWNvcmF0b3JzID0ge1xuICAgICdiYWNrZ3JvdW5kJzogW3sgdHlwZTogX2FuZ3VsYXJfY29yZS5JbnB1dCB9LF0sXG4gICAgJ2JhY2tncm91bmRBbHBoYSc6IFt7IHR5cGU6IF9hbmd1bGFyX2NvcmUuSW5wdXQgfSxdLFxuICAgICdmb3JlZ3JvdW5kJzogW3sgdHlwZTogX2FuZ3VsYXJfY29yZS5JbnB1dCB9LF0sXG4gICAgJ2ZvcmVncm91bmRBbHBoYSc6IFt7IHR5cGU6IF9hbmd1bGFyX2NvcmUuSW5wdXQgfSxdLFxuICAgICdsZXZlbCc6IFt7IHR5cGU6IF9hbmd1bGFyX2NvcmUuSW5wdXQgfSxdLFxuICAgICdtaW1lJzogW3sgdHlwZTogX2FuZ3VsYXJfY29yZS5JbnB1dCB9LF0sXG4gICAgJ3BhZGRpbmcnOiBbeyB0eXBlOiBfYW5ndWxhcl9jb3JlLklucHV0IH0sXSxcbiAgICAnc2l6ZSc6IFt7IHR5cGU6IF9hbmd1bGFyX2NvcmUuSW5wdXQgfSxdLFxuICAgICd2YWx1ZSc6IFt7IHR5cGU6IF9hbmd1bGFyX2NvcmUuSW5wdXQgfSxdLFxuICAgICdjYW52YXMnOiBbeyB0eXBlOiBfYW5ndWxhcl9jb3JlLklucHV0IH0sXSxcbn07XG52YXIgUVJDb2RlTW9kdWxlID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBRUkNvZGVNb2R1bGUoKSB7XG4gICAgfVxuICAgIHJldHVybiBRUkNvZGVNb2R1bGU7XG59KCkpO1xuUVJDb2RlTW9kdWxlLmRlY29yYXRvcnMgPSBbXG4gICAgeyB0eXBlOiBfYW5ndWxhcl9jb3JlLk5nTW9kdWxlLCBhcmdzOiBbe1xuICAgICAgICAgICAgICAgIGV4cG9ydHM6IFtRUkNvZGVDb21wb25lbnRdLFxuICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW1FSQ29kZUNvbXBvbmVudF1cbiAgICAgICAgICAgIH0sXSB9LFxuXTtcbi8qKlxuICogQG5vY29sbGFwc2VcbiAqL1xuUVJDb2RlTW9kdWxlLmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW107IH07XG5cbi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0cy5RUkNvZGVDb21wb25lbnQgPSBRUkNvZGVDb21wb25lbnQ7XG5leHBvcnRzLlFSQ29kZU1vZHVsZSA9IFFSQ29kZU1vZHVsZTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxufSkpKTtcbiJdfQ==