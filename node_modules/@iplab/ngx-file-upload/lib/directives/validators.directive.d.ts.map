{"version":3,"file":"validators.directive.d.ts","sources":["validators.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Validator, AbstractControl } from '@angular/forms';\r\nimport { ValidationErrors } from './../helpers/validators.class';\r\nimport { FileUploadService } from './../services/file-upload.service';\r\n/**\r\n * A Directive that adds the `filesize` validator to controls marked with the\r\n * `filesize` attribute. The size of the file is in bytes or any other unit\r\n *\r\n * ### Example\r\n *\r\n * ```\r\n * <file-upload name=\"files\" ngModel filesize=\"830000\"></file-upload>\r\n * <file-upload name=\"files\" ngModel [filesize]=\"830000\"></file-upload>\r\n * <file-upload name=\"files\" ngModel minSize=\"0\" max=\"6200\"></file-upload>\r\n * <file-upload name=\"files\" ngModel filesize=\"123MB\"></file-upload>\r\n * <file-upload name=\"files\" ngModel [filesize]=\"12 mb\"></file-upload>\r\n * <file-upload name=\"files\" ngModel minSize=\"0\" max=\"324KB\"></file-upload>\r\n * ```\r\n *\r\n */\r\nexport declare class FileSizeValidator implements Validator, OnChanges {\r\n    private readonly fileUploadService;\r\n    filesize: string | number;\r\n    minsize: string | number;\r\n    maxsize: string | number;\r\n    private validator;\r\n    constructor(fileUploadService: FileUploadService);\r\n    private onChange;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    validate(c: AbstractControl): ValidationErrors | null;\r\n    registerOnValidatorChange(fn: () => void): void;\r\n    private _createValidator;\r\n}\r\n/**\r\n * A Directive that adds the `fileslimit` validator to controls marked with the\r\n * `fileslimit` attribute.\r\n *\r\n * ### Example\r\n *\r\n * ```\r\n * <file-upload name=\"files\" ngModel fileslimit=\"2\"></file-upload>\r\n * <file-upload name=\"files\" ngModel [fileslimit]=\"2\"></file-upload>\r\n * ```\r\n *\r\n */\r\nexport declare class FilesLimitValidator implements Validator, OnChanges {\r\n    fileslimit: string | number;\r\n    private validator;\r\n    private onChange;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    validate(c: AbstractControl): ValidationErrors | null;\r\n    registerOnValidatorChange(fn: () => void): void;\r\n    private _createValidator;\r\n}\r\n/**\r\n * A Directive that adds the `accept` validator to controls marked with the\r\n * `accept` attribute.\r\n *\r\n * ### Example\r\n *\r\n * ```\r\n * <file-upload name=\"files\" ngModel accept=\"file_extension|audio/*|video/*|image/*|media_type\"></file-upload>\r\n * <file-upload name=\"files\" ngModel [accept]=\"file_extension|audio/*|video/*|image/*|media_type\"></file-upload>\r\n * ```\r\n *\r\n * To specify more than one value, separate the values with a comma (e.g. <file-upload accept=\"audio/*,video/*,image/*\"></file-upload>.\r\n *\r\n */\r\nexport declare class FilesAcceptValidator implements Validator, OnChanges {\r\n    accept: string;\r\n    private validator;\r\n    private onChange;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    validate(c: AbstractControl): ValidationErrors | null;\r\n    registerOnValidatorChange(fn: () => void): void;\r\n    private _createValidator;\r\n}\r\n"]}