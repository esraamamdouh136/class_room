{"version":3,"file":"tooltip-container.component.js","sources":["../../../../src/tooltip/tooltip-container.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,SAAS,EACT,uBAAuB,EACxB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;;;;;AAuC5C,MAAM,OAAO,yBAAyB;AAAG,IAWvC,YAAY,MAAqB;AACnC,QAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAChC,IAAE,CAAC;AACH,IAPE,IAAI,KAAK;AAAK,QACZ,OAAO,KAAK,EAAE,CAAC;AACnB,IAAE,CAAC;AACH,IAKE,eAAe;AAAK,QAClB,IAAI,CAAC,QAAQ,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AAC/C,QAAI,IAAI,IAAI,CAAC,SAAS,EAAE;AACxB,YAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;AAC3C,SAAK;AACL,QAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG,IAAI,CAAC;AACtD,QACI,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC;AAC5B,QAAI,IAAI,IAAI,CAAC,SAAS,EAAE;AACxB,YAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;AAChC,SAAK;AACL,QACI,IAAI,IAAI,CAAC,cAAc,EAAE;AAC7B,YAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;AAChD,SAAK;AACL,IAAE,CAAC;AACH;qDApEC,SAAS,SAAC,kBACT,QAAQ,EAAE,sBAAsB,kBAChC,eAAe,EAAE;EAAuB,CAAC,MAAM,kBAC/C,qEAAqE,iBACrE,IAAI,EAAE,sBACJ,SAAS,EACP,8GAA8G;oBAChH,cAAc,EAAE;EAAQ,sBACxB,aAAa,EAAE,OAAO,sBACtB,WAAW,EAAE,SAAS,sBACtB,IAAI,EAAE,SAAS,kBAChB;UAqBD,QAAQ,EAAE;oEAGP,2BAtBD;;;;;;kHAiBD,eAMF,ucACI;AAAC;AAAmD,YAxChD,aAAa;AAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8EAAE;AAAC","sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { TooltipConfig } from './tooltip.config';\nimport { isBs3 } from 'ngx-bootstrap/utils';\n\n@Component({\n  selector: 'bs-tooltip-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class]':\n      '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    '[class.bs3]': 'isBs3',\n    '[attr.id]': 'this.id',\n    role: 'tooltip'\n  },\n  styles: [\n    `\n    :host.tooltip {\n      display: block;\n      pointer-events: none;\n    }\n    :host.bs3.tooltip.top>.arrow {\n      margin-left: -2px;\n    }\n    :host.bs3.tooltip.bottom {\n      margin-top: 0px;\n    }\n    :host.bs3.bs-tooltip-left, :host.bs3.bs-tooltip-right{\n      margin: 0px;\n    }\n    :host.bs3.bs-tooltip-right .arrow, :host.bs3.bs-tooltip-left .arrow {\n      margin: .3rem 0;\n    }\n  `\n  ],\n  template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `\n})\nexport class TooltipContainerComponent implements AfterViewInit {\n  classMap?: { [key: string]: boolean };\n  placement?: string;\n  containerClass?: string;\n  animation?: boolean;\n  id?: string;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: TooltipConfig) {\n    Object.assign(this, config);\n  }\n\n  ngAfterViewInit(): void {\n    this.classMap = { in: false, fade: false };\n    if (this.placement) {\n      this.classMap[this.placement] = true;\n    }\n    this.classMap[`tooltip-${this.placement}`] = true;\n\n    this.classMap.in = true;\n    if (this.animation) {\n      this.classMap.fade = true;\n    }\n\n    if (this.containerClass) {\n      this.classMap[this.containerClass] = true;\n    }\n  }\n}\n"]}