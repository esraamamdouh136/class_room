{"version":3,"file":"ag-grid-angular.component.d.ts","sources":["ag-grid-angular.component.d.ts"],"names":[],"mappingssourcesContent":["import { AfterViewInit, ComponentFactoryResolver, ElementRef, EventEmitter, QueryList, ViewContainerRef } from \"@angular/core\";\nimport { ColDef, ColumnApi, GridApi, GridOptions, Module, ColGroupDef, ExcelStyle, IDatasource, IServerSideDatasource, IViewportDatasource, IAggFunc, CsvExportParams, ExcelExportParams, StatusPanelDef, SideBarDef, AgChartThemeOverrides, AgChartTheme, ServerSideStoreType, RowGroupingDisplayType, ICellRendererComp, ICellRendererFunc, GetContextMenuItems, GetMainMenuItems, GetRowNodeIdFunc, NavigateToNextHeaderParams, HeaderPosition, TabToNextHeaderParams, NavigateToNextCellParams, CellPosition, TabToNextCellParams, PostProcessPopupParams, GetDataPath, ICellRenderer, ILoadingOverlayComp, INoRowsOverlayComp, RowNode, IsRowMaster, IsRowSelectable, PaginationNumberFormatterParams, ProcessDataFromClipboardParams, GetServerSideGroupKey, IsServerSideGroup, SuppressKeyboardEventParams, ChartRef, ChartOptions, GetChartToolbarItems, FillOperationParams, IsApplyServerSideTransaction, GetServerSideStoreParamsParams, ServerSideStoreParams, IsServerSideGroupOpenByDefaultParams, IsGroupOpenByDefaultParams, ColumnEverythingChangedEvent, NewColumnsLoadedEvent, ColumnPivotModeChangedEvent, ColumnRowGroupChangedEvent, ExpandCollapseAllEvent, ColumnPivotChangedEvent, GridColumnsChangedEvent, ColumnValueChangedEvent, ColumnMovedEvent, ColumnVisibleEvent, ColumnPinnedEvent, ColumnGroupOpenedEvent, ColumnResizedEvent, DisplayedColumnsChangedEvent, VirtualColumnsChangedEvent, AsyncTransactionsFlushed, RowGroupOpenedEvent, RowDataChangedEvent, RowDataUpdatedEvent, PinnedRowDataChangedEvent, RangeSelectionChangedEvent, ChartCreated, ChartRangeSelectionChanged, ChartOptionsChanged, ChartDestroyed, ToolPanelVisibleChangedEvent, ModelUpdatedEvent, PasteStartEvent, PasteEndEvent, FillStartEvent, FillEndEvent, CellClickedEvent, CellDoubleClickedEvent, CellMouseDownEvent, CellContextMenuEvent, CellValueChangedEvent, RowValueChangedEvent, CellFocusedEvent, RowSelectedEvent, SelectionChangedEvent, CellKeyDownEvent, CellKeyPressEvent, CellMouseOverEvent, CellMouseOutEvent, FilterChangedEvent, FilterModifiedEvent, FilterOpenedEvent, SortChangedEvent, VirtualRowRemovedEvent, RowClickedEvent, RowDoubleClickedEvent, GridReadyEvent, GridSizeChangedEvent, ViewportChangedEvent, FirstDataRenderedEvent, DragStartedEvent, DragStoppedEvent, RowEditingStartedEvent, RowEditingStoppedEvent, CellEditingStartedEvent, CellEditingStoppedEvent, BodyScrollEvent, PaginationChangedEvent, ComponentStateChangedEvent, RowDragEvent, ColumnRowGroupChangeRequestEvent, ColumnPivotChangeRequestEvent, ColumnValueChangeRequestEvent, ColumnAggFuncChangeRequestEvent, ProcessRowParams, ProcessCellForExportParams, ProcessHeaderForExportParams, ProcessChartOptionsParams, RowClassRules, RowClassParams, RowHeightParams, SendToClipboardParams, TreeDataDisplayType, FullWidthCellKeyDownEvent, FullWidthCellKeyPressEvent } from \"ag-grid-community\";\nimport { AngularFrameworkOverrides } from \"./angularFrameworkOverrides\";\nimport { AngularFrameworkComponentWrapper } from \"./angularFrameworkComponentWrapper\";\nimport { AgGridColumn } from \"./ag-grid-column.component\";\nexport declare class AgGridAngular implements AfterViewInit {\n    private viewContainerRef;\n    private angularFrameworkOverrides;\n    private frameworkComponentWrapper;\n    private componentFactoryResolver;\n    private _nativeElement;\n    private _initialised;\n    private _destroyed;\n    private gridParams;\n    private _fullyReady;\n    api: GridApi;\n    columnApi: ColumnApi;\n    columns: QueryList<AgGridColumn>;\n    constructor(elementDef: ElementRef, viewContainerRef: ViewContainerRef, angularFrameworkOverrides: AngularFrameworkOverrides, frameworkComponentWrapper: AngularFrameworkComponentWrapper, componentFactoryResolver: ComponentFactoryResolver);\n    ngAfterViewInit(): void;\n    ngOnChanges(changes: any): void;\n    ngOnDestroy(): void;\n    protected isEmitterUsed(eventType: string): boolean;\n    private globalEventListener;\n    gridOptions: GridOptions;\n    modules: Module[];\n    alignedGrids: GridOptions[] | undefined;\n    rowData: any[] | undefined;\n    columnDefs: (ColDef | ColGroupDef)[] | undefined;\n    excelStyles: ExcelStyle[] | undefined;\n    pinnedTopRowData: any[] | undefined;\n    pinnedBottomRowData: any[] | undefined;\n    chartThemes: string[] | undefined;\n    components: {\n        [p: string]: any;\n    } | undefined;\n    frameworkComponents: {\n        [p: string]: {\n            new (): any;\n        };\n    } | any | undefined;\n    rowStyle: {\n        [cssProperty: string]: string;\n    } | undefined;\n    context: any | undefined;\n    autoGroupColumnDef: ColDef | undefined;\n    localeText: {\n        [key: string]: string;\n    } | undefined;\n    icons: {\n        [key: string]: Function | string;\n    } | undefined;\n    datasource: IDatasource | undefined;\n    serverSideDatasource: IServerSideDatasource | undefined;\n    viewportDatasource: IViewportDatasource | undefined;\n    groupRowRendererParams: any | undefined;\n    aggFuncs: {\n        [key: string]: IAggFunc;\n    } | undefined;\n    fullWidthCellRendererParams: any | undefined;\n    defaultColGroupDef: Partial<ColGroupDef> | undefined;\n    defaultColDef: ColDef | undefined;\n    /** @deprecated Use defaultCsvExportParams or defaultExcelExportParams\n     */\n    defaultExportParams: CsvExportParams | ExcelExportParams | undefined;\n    defaultCsvExportParams: CsvExportParams | undefined;\n    defaultExcelExportParams: ExcelExportParams | undefined;\n    columnTypes: {\n        [key: string]: ColDef;\n    } | undefined;\n    rowClassRules: RowClassRules | undefined;\n    detailCellRendererParams: any | undefined;\n    loadingCellRendererParams: any | undefined;\n    loadingOverlayComponentParams: any | undefined;\n    noRowsOverlayComponentParams: any | undefined;\n    popupParent: HTMLElement | undefined;\n    colResizeDefault: string | undefined;\n    statusBar: {\n        statusPanels: StatusPanelDef[];\n    } | undefined;\n    sideBar: SideBarDef | string | boolean | null | undefined;\n    chartThemeOverrides: AgChartThemeOverrides | undefined;\n    customChartThemes: {\n        [name: string]: AgChartTheme;\n    } | undefined;\n    sortingOrder: (string | null)[] | undefined;\n    rowClass: string | string[] | undefined;\n    rowSelection: string | undefined;\n    overlayLoadingTemplate: string | undefined;\n    overlayNoRowsTemplate: string | undefined;\n    quickFilterText: string | undefined;\n    rowModelType: string | undefined;\n    editType: string | undefined;\n    domLayout: string | undefined;\n    clipboardDeliminator: string | undefined;\n    rowGroupPanelShow: string | undefined;\n    multiSortKey: string | undefined;\n    pivotColumnGroupTotals: string | undefined;\n    pivotRowTotals: string | undefined;\n    pivotPanelShow: string | undefined;\n    fillHandleDirection: string | undefined;\n    serverSideStoreType: ServerSideStoreType | undefined;\n    groupDisplayType: RowGroupingDisplayType | undefined;\n    treeDataDisplayType: TreeDataDisplayType | undefined;\n    rowHeight: number | undefined;\n    detailRowHeight: number | undefined;\n    rowBuffer: number | undefined;\n    colWidth: number | undefined;\n    headerHeight: number | undefined;\n    groupHeaderHeight: number | undefined;\n    floatingFiltersHeight: number | undefined;\n    pivotHeaderHeight: number | undefined;\n    pivotGroupHeaderHeight: number | undefined;\n    groupDefaultExpanded: number | undefined;\n    minColWidth: number | undefined;\n    maxColWidth: number | undefined;\n    viewportRowModelPageSize: number | undefined;\n    viewportRowModelBufferSize: number | undefined;\n    autoSizePadding: number | undefined;\n    maxBlocksInCache: number | undefined;\n    maxConcurrentDatasourceRequests: number | undefined;\n    tooltipShowDelay: number | undefined;\n    cacheOverflowSize: number | undefined;\n    paginationPageSize: number | undefined;\n    cacheBlockSize: number | undefined;\n    infiniteInitialRowCount: number | undefined;\n    scrollbarWidth: number | undefined;\n    batchUpdateWaitMillis: number | undefined;\n    asyncTransactionWaitMillis: number | undefined;\n    blockLoadDebounceMillis: number | undefined;\n    keepDetailRowsCount: number | undefined;\n    undoRedoCellEditingLimit: number | undefined;\n    cellFlashDelay: number | undefined;\n    cellFadeDelay: number | undefined;\n    tabIndex: number | undefined;\n    localeTextFunc: (key: string, defaultValue: string) => string | undefined;\n    /** @deprecated - this is now groupRowRendererParams.innerRenderer\n     */\n    groupRowInnerRenderer: {\n        new (): ICellRendererComp;\n    } | ICellRendererFunc | string | undefined;\n    /** @deprecated - this is now groupRowRendererParams.innerRendererFramework\n     */\n    groupRowInnerRendererFramework: any | undefined;\n    dateComponent: any;\n    dateComponentFramework: any;\n    groupRowRenderer: {\n        new (): ICellRendererComp;\n    } | ICellRendererFunc | string | undefined;\n    groupRowRendererFramework: any | undefined;\n    isExternalFilterPresent: () => boolean | undefined;\n    getRowHeight: (params: RowHeightParams) => number | undefined | null | undefined;\n    doesExternalFilterPass: (node: RowNode) => boolean | undefined;\n    getRowClass: (params: RowClassParams) => string | string[] | undefined | undefined;\n    getRowStyle: (params: RowClassParams) => {\n        [cssProperty: string]: string;\n    } | undefined;\n    getContextMenuItems: GetContextMenuItems | undefined;\n    getMainMenuItems: GetMainMenuItems | undefined;\n    processRowPostCreate: (params: ProcessRowParams) => void | undefined;\n    processCellForClipboard: (params: ProcessCellForExportParams) => any | undefined;\n    groupRowAggNodes: (nodes: RowNode[]) => any | undefined;\n    getRowNodeId: GetRowNodeIdFunc | undefined;\n    isFullWidthCell: (rowNode: RowNode) => boolean | undefined;\n    fullWidthCellRenderer: {\n        new (): ICellRendererComp;\n    } | ICellRendererFunc | string | undefined;\n    fullWidthCellRendererFramework: any | undefined;\n    processSecondaryColDef: (colDef: ColDef) => void | undefined;\n    processSecondaryColGroupDef: (colGroupDef: ColGroupDef) => void | undefined;\n    getBusinessKeyForNode: (node: RowNode) => string | undefined;\n    sendToClipboard: (params: SendToClipboardParams) => void | undefined;\n    navigateToNextHeader: (params: NavigateToNextHeaderParams) => HeaderPosition | undefined;\n    tabToNextHeader: (params: TabToNextHeaderParams) => HeaderPosition | undefined;\n    navigateToNextCell: (params: NavigateToNextCellParams) => CellPosition | undefined;\n    tabToNextCell: (params: TabToNextCellParams) => CellPosition | undefined;\n    processCellFromClipboard: (params: ProcessCellForExportParams) => any | undefined;\n    getDocument: () => Document | undefined;\n    postProcessPopup: (params: PostProcessPopupParams) => void | undefined;\n    getChildCount: (dataItem: any) => number | undefined;\n    getDataPath: GetDataPath | undefined;\n    loadingCellRenderer: {\n        new (): ICellRenderer;\n    } | string | undefined;\n    loadingCellRendererFramework: any | undefined;\n    loadingOverlayComponent: {\n        new (): ILoadingOverlayComp;\n    } | string | undefined;\n    loadingOverlayComponentFramework: any | undefined;\n    noRowsOverlayComponent: {\n        new (): INoRowsOverlayComp;\n    } | string | undefined;\n    noRowsOverlayComponentFramework: any | undefined;\n    detailCellRenderer: {\n        new (): ICellRendererComp;\n    } | ICellRendererFunc | string | undefined;\n    detailCellRendererFramework: any | undefined;\n    isRowMaster: IsRowMaster | undefined;\n    isRowSelectable: IsRowSelectable | undefined;\n    postSort: (nodes: RowNode[]) => void | undefined;\n    processHeaderForClipboard: (params: ProcessHeaderForExportParams) => any | undefined;\n    paginationNumberFormatter: (params: PaginationNumberFormatterParams) => string | undefined;\n    processDataFromClipboard: (params: ProcessDataFromClipboardParams) => string[][] | null | undefined;\n    getServerSideGroupKey: GetServerSideGroupKey | undefined;\n    isServerSideGroup: IsServerSideGroup | undefined;\n    /** Allows user to suppress certain keyboard events     */\n    suppressKeyboardEvent: (params: SuppressKeyboardEventParams) => boolean | undefined;\n    createChartContainer: (params: ChartRef) => void | undefined;\n    /** @deprecated\n     */\n    processChartOptions: (params: ProcessChartOptionsParams) => ChartOptions<any> | undefined;\n    getChartToolbarItems: GetChartToolbarItems | undefined;\n    fillOperation: (params: FillOperationParams) => any | undefined;\n    isApplyServerSideTransaction: IsApplyServerSideTransaction | undefined;\n    getServerSideStoreParams: (params: GetServerSideStoreParamsParams) => ServerSideStoreParams | undefined;\n    isServerSideGroupOpenByDefault: (params: IsServerSideGroupOpenByDefaultParams) => boolean | undefined;\n    isGroupOpenByDefault: (params: IsGroupOpenByDefaultParams) => boolean | undefined;\n    /** @deprecated - Use defaultGroupOrderComparator instead\n     */\n    defaultGroupSortComparator: (nodeA: RowNode, nodeB: RowNode) => number | undefined;\n    defaultGroupOrderComparator: (nodeA: RowNode, nodeB: RowNode) => number | undefined;\n    suppressMakeColumnVisibleAfterUnGroup: boolean | undefined;\n    suppressRowClickSelection: boolean | undefined;\n    suppressCellSelection: boolean | undefined;\n    suppressHorizontalScroll: boolean | undefined;\n    alwaysShowHorizontalScroll: boolean | undefined;\n    alwaysShowVerticalScroll: boolean | undefined;\n    debug: boolean | undefined;\n    enableBrowserTooltips: boolean | undefined;\n    enableCellExpressions: boolean | undefined;\n    angularCompileRows: boolean | undefined;\n    angularCompileFilters: boolean | undefined;\n    /** @deprecated - Use groupDisplayType = 'custom' instead\n     */\n    groupSuppressAutoColumn: boolean | undefined;\n    groupSelectsChildren: boolean | undefined;\n    groupIncludeFooter: boolean | undefined;\n    groupIncludeTotalFooter: boolean | undefined;\n    /** @deprecated - Use groupDisplayType = 'groupRows' instead\n     */\n    groupUseEntireRow: boolean | undefined;\n    groupSuppressBlankHeader: boolean | undefined;\n    suppressMenuHide: boolean | undefined;\n    suppressRowDeselection: boolean | undefined;\n    unSortIcon: boolean | undefined;\n    suppressMultiSort: boolean | undefined;\n    singleClickEdit: boolean | undefined;\n    suppressLoadingOverlay: boolean | undefined;\n    suppressNoRowsOverlay: boolean | undefined;\n    suppressAutoSize: boolean | undefined;\n    skipHeaderOnAutoSize: boolean | undefined;\n    suppressParentsInRowNodes: boolean | undefined;\n    suppressColumnMoveAnimation: boolean | undefined;\n    suppressMovableColumns: boolean | undefined;\n    suppressFieldDotNotation: boolean | undefined;\n    enableRangeSelection: boolean | undefined;\n    enableRangeHandle: boolean | undefined;\n    enableFillHandle: boolean | undefined;\n    suppressClearOnFillReduction: boolean | undefined;\n    deltaSort: boolean | undefined;\n    suppressTouch: boolean | undefined;\n    suppressAsyncEvents: boolean | undefined;\n    allowContextMenuWithControlKey: boolean | undefined;\n    suppressContextMenu: boolean | undefined;\n    /** @deprecated - no longer needed, transaction updates keep group state\n     */\n    rememberGroupStateWhenNewData: boolean | undefined;\n    enableCellChangeFlash: boolean | undefined;\n    suppressDragLeaveHidesColumns: boolean | undefined;\n    suppressMiddleClickScrolls: boolean | undefined;\n    suppressPreventDefaultOnMouseWheel: boolean | undefined;\n    suppressCopyRowsToClipboard: boolean | undefined;\n    copyHeadersToClipboard: boolean | undefined;\n    pivotMode: boolean | undefined;\n    suppressAggFuncInHeader: boolean | undefined;\n    suppressColumnVirtualisation: boolean | undefined;\n    suppressAggAtRootLevel: boolean | undefined;\n    suppressFocusAfterRefresh: boolean | undefined;\n    functionsPassive: boolean | undefined;\n    functionsReadOnly: boolean | undefined;\n    animateRows: boolean | undefined;\n    groupSelectsFiltered: boolean | undefined;\n    groupRemoveSingleChildren: boolean | undefined;\n    groupRemoveLowestSingleChildren: boolean | undefined;\n    enableRtl: boolean | undefined;\n    suppressClickEdit: boolean | undefined;\n    rowDragManaged: boolean | undefined;\n    suppressRowDrag: boolean | undefined;\n    suppressMoveWhenRowDragging: boolean | undefined;\n    enableMultiRowDragging: boolean | undefined;\n    enableGroupEdit: boolean | undefined;\n    embedFullWidthRows: boolean | undefined;\n    /** @deprecated\n     */\n    deprecatedEmbedFullWidthRows: boolean | undefined;\n    suppressPaginationPanel: boolean | undefined;\n    /** @deprecated Use floatingFilter on the colDef instead\n     */\n    floatingFilter: boolean | undefined;\n    groupHideOpenParents: boolean | undefined;\n    /** @deprecated - Use groupDisplayType = 'multipleColumns' instead\n     */\n    groupMultiAutoColumn: boolean | undefined;\n    pagination: boolean | undefined;\n    /** @deprecated Use stopEditingWhenCellsLoseFocus instead\n     */\n    stopEditingWhenGridLosesFocus: boolean | undefined;\n    paginationAutoPageSize: boolean | undefined;\n    suppressScrollOnNewData: boolean | undefined;\n    purgeClosedRowNodes: boolean | undefined;\n    cacheQuickFilter: boolean | undefined;\n    /** @deprecated\n     */\n    deltaRowDataMode: boolean | undefined;\n    ensureDomOrder: boolean | undefined;\n    accentedSort: boolean | undefined;\n    suppressChangeDetection: boolean | undefined;\n    valueCache: boolean | undefined;\n    valueCacheNeverExpires: boolean | undefined;\n    aggregateOnlyChangedColumns: boolean | undefined;\n    suppressAnimationFrame: boolean | undefined;\n    suppressExcelExport: boolean | undefined;\n    suppressCsvExport: boolean | undefined;\n    treeData: boolean | undefined;\n    masterDetail: boolean | undefined;\n    suppressMultiRangeSelection: boolean | undefined;\n    enterMovesDownAfterEdit: boolean | undefined;\n    enterMovesDown: boolean | undefined;\n    suppressPropertyNamesCheck: boolean | undefined;\n    rowMultiSelectWithClick: boolean | undefined;\n    suppressEnterpriseResetOnNewColumns: boolean | undefined;\n    enableOldSetFilterModel: boolean | undefined;\n    suppressRowHoverHighlight: boolean | undefined;\n    suppressRowTransform: boolean | undefined;\n    suppressClipboardPaste: boolean | undefined;\n    suppressLastEmptyLineOnPaste: boolean | undefined;\n    serverSideSortingAlwaysResets: boolean | undefined;\n    /** @deprecated\n     */\n    suppressSetColumnStateEvents: boolean | undefined;\n    /** @deprecated\n     */\n    suppressColumnStateEvents: boolean | undefined;\n    enableCharts: boolean | undefined;\n    /** @deprecated\n     */\n    deltaColumnMode: boolean | undefined;\n    suppressMaintainUnsortedOrder: boolean | undefined;\n    enableCellTextSelection: boolean | undefined;\n    /** Set once in init, can never change     */\n    suppressBrowserResizeObserver: boolean | undefined;\n    suppressMaxRenderedRowRestriction: boolean | undefined;\n    excludeChildrenWhenTreeDataFiltering: boolean | undefined;\n    tooltipMouseTrack: boolean | undefined;\n    keepDetailRows: boolean | undefined;\n    paginateChildRows: boolean | undefined;\n    preventDefaultOnContextMenu: boolean | undefined;\n    undoRedoCellEditing: boolean | undefined;\n    allowDragFromColumnsToolPanel: boolean | undefined;\n    immutableData: boolean | undefined;\n    /** @deprecated\n     */\n    immutableColumns: boolean | undefined;\n    pivotSuppressAutoColumn: boolean | undefined;\n    suppressExpandablePivotGroups: boolean | undefined;\n    /** @deprecated\n     */\n    applyColumnDefOrder: boolean | undefined;\n    debounceVerticalScrollbar: boolean | undefined;\n    detailRowAutoHeight: boolean | undefined;\n    serverSideFilteringAlwaysResets: boolean | undefined;\n    suppressAggFilteredOnly: boolean | undefined;\n    showOpenedGroup: boolean | undefined;\n    suppressClipboardApi: boolean | undefined;\n    suppressModelUpdateAfterUpdateTransaction: boolean | undefined;\n    stopEditingWhenCellsLoseFocus: boolean | undefined;\n    maintainColumnOrder: boolean | undefined;\n    groupMaintainOrder: boolean | undefined;\n    columnHoverHighlight: boolean | undefined;\n    /** @deprecated\n     */\n    allowProcessChartOptions: boolean | undefined;\n    columnEverythingChanged: EventEmitter<ColumnEverythingChangedEvent>;\n    newColumnsLoaded: EventEmitter<NewColumnsLoadedEvent>;\n    columnPivotModeChanged: EventEmitter<ColumnPivotModeChangedEvent>;\n    columnRowGroupChanged: EventEmitter<ColumnRowGroupChangedEvent>;\n    expandOrCollapseAll: EventEmitter<ExpandCollapseAllEvent>;\n    columnPivotChanged: EventEmitter<ColumnPivotChangedEvent>;\n    gridColumnsChanged: EventEmitter<GridColumnsChangedEvent>;\n    columnValueChanged: EventEmitter<ColumnValueChangedEvent>;\n    columnMoved: EventEmitter<ColumnMovedEvent>;\n    columnVisible: EventEmitter<ColumnVisibleEvent>;\n    columnPinned: EventEmitter<ColumnPinnedEvent>;\n    columnGroupOpened: EventEmitter<ColumnGroupOpenedEvent>;\n    columnResized: EventEmitter<ColumnResizedEvent>;\n    displayedColumnsChanged: EventEmitter<DisplayedColumnsChangedEvent>;\n    virtualColumnsChanged: EventEmitter<VirtualColumnsChangedEvent>;\n    asyncTransactionsFlushed: EventEmitter<AsyncTransactionsFlushed>;\n    rowGroupOpened: EventEmitter<RowGroupOpenedEvent>;\n    rowDataChanged: EventEmitter<RowDataChangedEvent>;\n    rowDataUpdated: EventEmitter<RowDataUpdatedEvent>;\n    pinnedRowDataChanged: EventEmitter<PinnedRowDataChangedEvent>;\n    rangeSelectionChanged: EventEmitter<RangeSelectionChangedEvent>;\n    chartCreated: EventEmitter<ChartCreated>;\n    chartRangeSelectionChanged: EventEmitter<ChartRangeSelectionChanged>;\n    chartOptionsChanged: EventEmitter<ChartOptionsChanged>;\n    chartDestroyed: EventEmitter<ChartDestroyed>;\n    toolPanelVisibleChanged: EventEmitter<ToolPanelVisibleChangedEvent>;\n    modelUpdated: EventEmitter<ModelUpdatedEvent>;\n    pasteStart: EventEmitter<PasteStartEvent>;\n    pasteEnd: EventEmitter<PasteEndEvent>;\n    fillStart: EventEmitter<FillStartEvent>;\n    fillEnd: EventEmitter<FillEndEvent>;\n    cellClicked: EventEmitter<CellClickedEvent>;\n    cellDoubleClicked: EventEmitter<CellDoubleClickedEvent>;\n    cellMouseDown: EventEmitter<CellMouseDownEvent>;\n    cellContextMenu: EventEmitter<CellContextMenuEvent>;\n    cellValueChanged: EventEmitter<CellValueChangedEvent>;\n    rowValueChanged: EventEmitter<RowValueChangedEvent>;\n    cellFocused: EventEmitter<CellFocusedEvent>;\n    rowSelected: EventEmitter<RowSelectedEvent>;\n    selectionChanged: EventEmitter<SelectionChangedEvent>;\n    cellKeyDown: EventEmitter<CellKeyDownEvent | FullWidthCellKeyDownEvent>;\n    cellKeyPress: EventEmitter<CellKeyPressEvent | FullWidthCellKeyPressEvent>;\n    cellMouseOver: EventEmitter<CellMouseOverEvent>;\n    cellMouseOut: EventEmitter<CellMouseOutEvent>;\n    filterChanged: EventEmitter<FilterChangedEvent>;\n    filterModified: EventEmitter<FilterModifiedEvent>;\n    filterOpened: EventEmitter<FilterOpenedEvent>;\n    sortChanged: EventEmitter<SortChangedEvent>;\n    virtualRowRemoved: EventEmitter<VirtualRowRemovedEvent>;\n    rowClicked: EventEmitter<RowClickedEvent>;\n    rowDoubleClicked: EventEmitter<RowDoubleClickedEvent>;\n    gridReady: EventEmitter<GridReadyEvent>;\n    gridSizeChanged: EventEmitter<GridSizeChangedEvent>;\n    viewportChanged: EventEmitter<ViewportChangedEvent>;\n    firstDataRendered: EventEmitter<FirstDataRenderedEvent>;\n    dragStarted: EventEmitter<DragStartedEvent>;\n    dragStopped: EventEmitter<DragStoppedEvent>;\n    rowEditingStarted: EventEmitter<RowEditingStartedEvent>;\n    rowEditingStopped: EventEmitter<RowEditingStoppedEvent>;\n    cellEditingStarted: EventEmitter<CellEditingStartedEvent>;\n    cellEditingStopped: EventEmitter<CellEditingStoppedEvent>;\n    bodyScroll: EventEmitter<BodyScrollEvent>;\n    paginationChanged: EventEmitter<PaginationChangedEvent>;\n    componentStateChanged: EventEmitter<ComponentStateChangedEvent>;\n    rowDragEnter: EventEmitter<RowDragEvent>;\n    rowDragMove: EventEmitter<RowDragEvent>;\n    rowDragLeave: EventEmitter<RowDragEvent>;\n    rowDragEnd: EventEmitter<RowDragEvent>;\n    columnRowGroupChangeRequest: EventEmitter<ColumnRowGroupChangeRequestEvent>;\n    columnPivotChangeRequest: EventEmitter<ColumnPivotChangeRequestEvent>;\n    columnValueChangeRequest: EventEmitter<ColumnValueChangeRequestEvent>;\n    columnAggFuncChangeRequest: EventEmitter<ColumnAggFuncChangeRequestEvent>;\n}\n"]}